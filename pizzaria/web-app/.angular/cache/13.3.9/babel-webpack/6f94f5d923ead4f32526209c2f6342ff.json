{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nconst _c0 = [\"inputtext\"];\n\nfunction Chips_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Chips_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.field ? ctx_r7.resolveFieldData(item_r3, ctx_r7.field) : item_r3);\n  }\n}\n\nfunction Chips_li_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function Chips_li_2_span_4_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.removeItem($event, i_r4);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Chips_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 7, 8);\n    i0.ɵɵlistener(\"click\", function Chips_li_2_Template_li_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onItemClick($event, item_r3);\n    });\n    i0.ɵɵtemplate(2, Chips_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵtemplate(3, Chips_li_2_span_3_Template, 2, 1, \"span\", 10);\n    i0.ɵɵtemplate(4, Chips_li_2_span_4_Template, 1, 0, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c1, item_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.disabled);\n  }\n}\n\nfunction Chips_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 14);\n    i0.ɵɵlistener(\"click\", function Chips_i_7_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.clear();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c2 = function (a1, a2) {\n  return {\n    \"p-inputtext p-chips-multiple-container\": true,\n    \"p-focus\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nconst _c3 = function (a0) {\n  return {\n    \"p-chips-clearable\": a0\n  };\n};\n\nconst CHIPS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Chips),\n  multi: true\n};\n\nclass Chips {\n  constructor(el, cd) {\n    this.el = el;\n    this.cd = cd;\n    this.allowDuplicate = true;\n    this.showClear = false;\n    this.onAdd = new EventEmitter();\n    this.onRemove = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onChipClick = new EventEmitter();\n    this.onClear = new EventEmitter();\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n    this.updateFilledState();\n  }\n\n  onClick() {\n    this.inputViewChild.nativeElement.focus();\n  }\n\n  onInput() {\n    this.updateFilledState();\n  }\n\n  onPaste(event) {\n    if (!this.disabled) {\n      if (this.separator) {\n        let pastedData = (event.clipboardData || window['clipboardData']).getData('Text');\n        pastedData.split(this.separator).forEach(val => {\n          this.addItem(event, val, true);\n        });\n        this.inputViewChild.nativeElement.value = '';\n      }\n\n      this.updateFilledState();\n    }\n  }\n\n  updateFilledState() {\n    if (!this.value || this.value.length === 0) {\n      this.filled = this.inputViewChild && this.inputViewChild.nativeElement && this.inputViewChild.nativeElement.value != '';\n    } else {\n      this.filled = true;\n    }\n  }\n\n  onItemClick(event, item) {\n    this.onChipClick.emit({\n      originalEvent: event,\n      value: item\n    });\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.updateMaxedOut();\n    this.updateFilledState();\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  resolveFieldData(data, field) {\n    if (data && field) {\n      if (field.indexOf('.') == -1) {\n        return data[field];\n      } else {\n        let fields = field.split('.');\n        let value = data;\n\n        for (var i = 0, len = fields.length; i < len; ++i) {\n          value = value[fields[i]];\n        }\n\n        return value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onInputFocus(event) {\n    this.focus = true;\n    this.onFocus.emit(event);\n  }\n\n  onInputBlur(event) {\n    this.focus = false;\n\n    if (this.addOnBlur && this.inputViewChild.nativeElement.value) {\n      this.addItem(event, this.inputViewChild.nativeElement.value, false);\n    }\n\n    this.onModelTouched();\n    this.onBlur.emit(event);\n  }\n\n  removeItem(event, index) {\n    if (this.disabled) {\n      return;\n    }\n\n    let removedItem = this.value[index];\n    this.value = this.value.filter((val, i) => i != index);\n    this.onModelChange(this.value);\n    this.onRemove.emit({\n      originalEvent: event,\n      value: removedItem\n    });\n    this.updateFilledState();\n    this.updateMaxedOut();\n  }\n\n  addItem(event, item, preventDefault) {\n    this.value = this.value || [];\n\n    if (item && item.trim().length) {\n      if (this.allowDuplicate || this.value.indexOf(item) === -1) {\n        this.value = [...this.value, item];\n        this.onModelChange(this.value);\n        this.onAdd.emit({\n          originalEvent: event,\n          value: item\n        });\n      }\n    }\n\n    this.updateFilledState();\n    this.updateMaxedOut();\n    this.inputViewChild.nativeElement.value = '';\n\n    if (preventDefault) {\n      event.preventDefault();\n    }\n  }\n\n  clear() {\n    this.value = null;\n    this.updateFilledState();\n    this.onModelChange(this.value);\n    this.onClear.emit();\n  }\n\n  onKeydown(event) {\n    switch (event.which) {\n      //backspace\n      case 8:\n        if (this.inputViewChild.nativeElement.value.length === 0 && this.value && this.value.length > 0) {\n          this.value = [...this.value];\n          let removedItem = this.value.pop();\n          this.onModelChange(this.value);\n          this.onRemove.emit({\n            originalEvent: event,\n            value: removedItem\n          });\n          this.updateFilledState();\n        }\n\n        break;\n      //enter\n\n      case 13:\n        this.addItem(event, this.inputViewChild.nativeElement.value, true);\n        break;\n\n      case 9:\n        if (this.addOnTab && this.inputViewChild.nativeElement.value !== '') {\n          this.addItem(event, this.inputViewChild.nativeElement.value, true);\n        }\n\n        break;\n\n      default:\n        if (this.max && this.value && this.max === this.value.length) {\n          event.preventDefault();\n        } else if (this.separator) {\n          if (this.separator === ',' && event.which === 188) {\n            this.addItem(event, this.inputViewChild.nativeElement.value, true);\n          }\n        }\n\n        break;\n    }\n  }\n\n  updateMaxedOut() {\n    if (this.inputViewChild && this.inputViewChild.nativeElement) {\n      if (this.max && this.value && this.max === this.value.length) this.inputViewChild.nativeElement.disabled = true;else this.inputViewChild.nativeElement.disabled = this.disabled || false;\n    }\n  }\n\n}\n\nChips.ɵfac = function Chips_Factory(t) {\n  return new (t || Chips)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nChips.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Chips,\n  selectors: [[\"p-chips\"]],\n  contentQueries: function Chips_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Chips_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 6,\n  hostBindings: function Chips_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus)(\"p-chips-clearable\", ctx.showClear);\n    }\n  },\n  inputs: {\n    style: \"style\",\n    styleClass: \"styleClass\",\n    disabled: \"disabled\",\n    field: \"field\",\n    placeholder: \"placeholder\",\n    max: \"max\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    tabindex: \"tabindex\",\n    inputId: \"inputId\",\n    allowDuplicate: \"allowDuplicate\",\n    inputStyle: \"inputStyle\",\n    inputStyleClass: \"inputStyleClass\",\n    addOnTab: \"addOnTab\",\n    addOnBlur: \"addOnBlur\",\n    separator: \"separator\",\n    showClear: \"showClear\"\n  },\n  outputs: {\n    onAdd: \"onAdd\",\n    onRemove: \"onRemove\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onChipClick: \"onChipClick\",\n    onClear: \"onClear\"\n  },\n  features: [i0.ɵɵProvidersFeature([CHIPS_VALUE_ACCESSOR])],\n  decls: 8,\n  vars: 21,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [3, \"ngClass\"], [\"class\", \"p-chips-token\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-chips-input-token\", 3, \"ngClass\"], [\"type\", \"text\", 3, \"disabled\", \"ngStyle\", \"keydown\", \"input\", \"paste\", \"focus\", \"blur\"], [\"inputtext\", \"\"], [\"class\", \"p-chips-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [1, \"p-chips-token\", 3, \"click\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-chips-token-label\", 4, \"ngIf\"], [\"class\", \"p-chips-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-chips-token-label\"], [1, \"p-chips-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-chips-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"]],\n  template: function Chips_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function Chips_Template_div_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementStart(1, \"ul\", 1);\n      i0.ɵɵtemplate(2, Chips_li_2_Template, 5, 6, \"li\", 2);\n      i0.ɵɵelementStart(3, \"li\", 3)(4, \"input\", 4, 5);\n      i0.ɵɵlistener(\"keydown\", function Chips_Template_input_keydown_4_listener($event) {\n        return ctx.onKeydown($event);\n      })(\"input\", function Chips_Template_input_input_4_listener() {\n        return ctx.onInput();\n      })(\"paste\", function Chips_Template_input_paste_4_listener($event) {\n        return ctx.onPaste($event);\n      })(\"focus\", function Chips_Template_input_focus_4_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function Chips_Template_input_blur_4_listener($event) {\n        return ctx.onInputBlur($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"li\");\n      i0.ɵɵtemplate(7, Chips_i_7_Template, 1, 0, \"i\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-chips p-component\")(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c2, ctx.focus, ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c3, ctx.showClear && !ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.inputStyleClass);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"ngStyle\", ctx.inputStyle);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"placeholder\", ctx.value && ctx.value.length ? null : ctx.placeholder)(\"tabindex\", ctx.tabindex)(\"aria-labelledby\", ctx.ariaLabelledBy);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.value != null && ctx.filled && !ctx.disabled && ctx.showClear);\n    }\n  },\n  directives: [i1.NgClass, i1.NgStyle, i1.NgForOf, i1.NgTemplateOutlet, i1.NgIf],\n  styles: [\".p-chips{display:inline-flex}.p-chips-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-chips-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-chips-input-token{flex:1 1 auto;display:inline-flex}.p-chips-token-icon{cursor:pointer}.p-chips-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-chips{display:flex}.p-chips-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-chips-clearable .p-inputtext{position:relative}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Chips, [{\n    type: Component,\n    args: [{\n      selector: 'p-chips',\n      template: `\n        <div [ngClass]=\"'p-chips p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick()\">\n            <ul [ngClass]=\"{'p-inputtext p-chips-multiple-container':true,'p-focus':focus,'p-disabled':disabled}\">\n                <li #token *ngFor=\"let item of value; let i = index;\" class=\"p-chips-token\" (click)=\"onItemClick($event, item)\">\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n                    <span *ngIf=\"!itemTemplate\" class=\"p-chips-token-label\">{{field ? resolveFieldData(item,field) : item}}</span>\n                    <span *ngIf=\"!disabled\" class=\"p-chips-token-icon pi pi-times-circle\" (click)=\"removeItem($event,i)\"></span>\n                </li>\n                <li class=\"p-chips-input-token\" [ngClass]=\"{'p-chips-clearable': showClear && !disabled}\">\n                <input #inputtext type=\"text\" [attr.id]=\"inputId\" [attr.placeholder]=\"(value && value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\"\n                (input)=\"onInput()\" (paste)=\"onPaste($event)\" [attr.aria-labelledby]=\"ariaLabelledBy\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\">\n                </li>\n                <li>\n                    <i *ngIf=\"value != null && filled && !disabled && showClear\" class=\"p-chips-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n                </li>\n            </ul>\n        </div>\n    `,\n      host: {\n        'class': 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focus',\n        '[class.p-chips-clearable]': 'showClear'\n      },\n      providers: [CHIPS_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-chips{display:inline-flex}.p-chips-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-chips-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-chips-input-token{flex:1 1 auto;display:inline-flex}.p-chips-token-icon{cursor:pointer}.p-chips-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-chips{display:flex}.p-chips-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-chips-clearable .p-inputtext{position:relative}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    field: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    allowDuplicate: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    addOnTab: [{\n      type: Input\n    }],\n    addOnBlur: [{\n      type: Input\n    }],\n    separator: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    onAdd: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onChipClick: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    inputViewChild: [{\n      type: ViewChild,\n      args: ['inputtext']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass ChipsModule {}\n\nChipsModule.ɵfac = function ChipsModule_Factory(t) {\n  return new (t || ChipsModule)();\n};\n\nChipsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChipsModule\n});\nChipsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, InputTextModule, SharedModule], InputTextModule, SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, SharedModule],\n      exports: [Chips, InputTextModule, SharedModule],\n      declarations: [Chips]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CHIPS_VALUE_ACCESSOR, Chips, ChipsModule };","map":{"version":3,"sources":["C:/Users/guijm/OneDrive/Área de Trabalho/projetoPizzaria/pizzaria/pizzaria/web-app/node_modules/primeng/fesm2015/primeng-chips.mjs"],"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChildren","NgModule","i1","CommonModule","PrimeTemplate","SharedModule","InputTextModule","NG_VALUE_ACCESSOR","CHIPS_VALUE_ACCESSOR","provide","useExisting","Chips","multi","constructor","el","cd","allowDuplicate","showClear","onAdd","onRemove","onFocus","onBlur","onChipClick","onClear","onModelChange","onModelTouched","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","template","updateFilledState","onClick","inputViewChild","nativeElement","focus","onInput","onPaste","event","disabled","separator","pastedData","clipboardData","window","getData","split","val","addItem","value","length","filled","onItemClick","emit","originalEvent","writeValue","updateMaxedOut","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","resolveFieldData","data","field","indexOf","fields","i","len","onInputFocus","onInputBlur","addOnBlur","removeItem","index","removedItem","filter","preventDefault","trim","clear","onKeydown","which","pop","addOnTab","max","ɵfac","ElementRef","ChangeDetectorRef","ɵcmp","NgClass","NgStyle","NgForOf","NgTemplateOutlet","NgIf","type","args","selector","host","providers","changeDetection","OnPush","encapsulation","None","styles","style","styleClass","placeholder","ariaLabelledBy","tabindex","inputId","inputStyle","inputStyleClass","ChipsModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst CHIPS_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Chips),\n    multi: true\n};\nclass Chips {\n    constructor(el, cd) {\n        this.el = el;\n        this.cd = cd;\n        this.allowDuplicate = true;\n        this.showClear = false;\n        this.onAdd = new EventEmitter();\n        this.onRemove = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onChipClick = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n        this.updateFilledState();\n    }\n    onClick() {\n        this.inputViewChild.nativeElement.focus();\n    }\n    onInput() {\n        this.updateFilledState();\n    }\n    onPaste(event) {\n        if (!this.disabled) {\n            if (this.separator) {\n                let pastedData = (event.clipboardData || window['clipboardData']).getData('Text');\n                pastedData.split(this.separator).forEach(val => {\n                    this.addItem(event, val, true);\n                });\n                this.inputViewChild.nativeElement.value = '';\n            }\n            this.updateFilledState();\n        }\n    }\n    updateFilledState() {\n        if (!this.value || this.value.length === 0) {\n            this.filled = (this.inputViewChild && this.inputViewChild.nativeElement && this.inputViewChild.nativeElement.value != '');\n        }\n        else {\n            this.filled = true;\n        }\n    }\n    onItemClick(event, item) {\n        this.onChipClick.emit({\n            originalEvent: event,\n            value: item\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        this.updateMaxedOut();\n        this.updateFilledState();\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    resolveFieldData(data, field) {\n        if (data && field) {\n            if (field.indexOf('.') == -1) {\n                return data[field];\n            }\n            else {\n                let fields = field.split('.');\n                let value = data;\n                for (var i = 0, len = fields.length; i < len; ++i) {\n                    value = value[fields[i]];\n                }\n                return value;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    onInputFocus(event) {\n        this.focus = true;\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focus = false;\n        if (this.addOnBlur && this.inputViewChild.nativeElement.value) {\n            this.addItem(event, this.inputViewChild.nativeElement.value, false);\n        }\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    removeItem(event, index) {\n        if (this.disabled) {\n            return;\n        }\n        let removedItem = this.value[index];\n        this.value = this.value.filter((val, i) => i != index);\n        this.onModelChange(this.value);\n        this.onRemove.emit({\n            originalEvent: event,\n            value: removedItem\n        });\n        this.updateFilledState();\n        this.updateMaxedOut();\n    }\n    addItem(event, item, preventDefault) {\n        this.value = this.value || [];\n        if (item && item.trim().length) {\n            if (this.allowDuplicate || this.value.indexOf(item) === -1) {\n                this.value = [...this.value, item];\n                this.onModelChange(this.value);\n                this.onAdd.emit({\n                    originalEvent: event,\n                    value: item\n                });\n            }\n        }\n        this.updateFilledState();\n        this.updateMaxedOut();\n        this.inputViewChild.nativeElement.value = '';\n        if (preventDefault) {\n            event.preventDefault();\n        }\n    }\n    clear() {\n        this.value = null;\n        this.updateFilledState();\n        this.onModelChange(this.value);\n        this.onClear.emit();\n    }\n    onKeydown(event) {\n        switch (event.which) {\n            //backspace\n            case 8:\n                if (this.inputViewChild.nativeElement.value.length === 0 && this.value && this.value.length > 0) {\n                    this.value = [...this.value];\n                    let removedItem = this.value.pop();\n                    this.onModelChange(this.value);\n                    this.onRemove.emit({\n                        originalEvent: event,\n                        value: removedItem\n                    });\n                    this.updateFilledState();\n                }\n                break;\n            //enter\n            case 13:\n                this.addItem(event, this.inputViewChild.nativeElement.value, true);\n                break;\n            case 9:\n                if (this.addOnTab && this.inputViewChild.nativeElement.value !== '') {\n                    this.addItem(event, this.inputViewChild.nativeElement.value, true);\n                }\n                break;\n            default:\n                if (this.max && this.value && this.max === this.value.length) {\n                    event.preventDefault();\n                }\n                else if (this.separator) {\n                    if (this.separator === ',' && event.which === 188) {\n                        this.addItem(event, this.inputViewChild.nativeElement.value, true);\n                    }\n                }\n                break;\n        }\n    }\n    updateMaxedOut() {\n        if (this.inputViewChild && this.inputViewChild.nativeElement) {\n            if (this.max && this.value && this.max === this.value.length)\n                this.inputViewChild.nativeElement.disabled = true;\n            else\n                this.inputViewChild.nativeElement.disabled = this.disabled || false;\n        }\n    }\n}\nChips.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Chips, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nChips.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: Chips, selector: \"p-chips\", inputs: { style: \"style\", styleClass: \"styleClass\", disabled: \"disabled\", field: \"field\", placeholder: \"placeholder\", max: \"max\", ariaLabelledBy: \"ariaLabelledBy\", tabindex: \"tabindex\", inputId: \"inputId\", allowDuplicate: \"allowDuplicate\", inputStyle: \"inputStyle\", inputStyleClass: \"inputStyleClass\", addOnTab: \"addOnTab\", addOnBlur: \"addOnBlur\", separator: \"separator\", showClear: \"showClear\" }, outputs: { onAdd: \"onAdd\", onRemove: \"onRemove\", onFocus: \"onFocus\", onBlur: \"onBlur\", onChipClick: \"onChipClick\", onClear: \"onClear\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focus\", \"class.p-chips-clearable\": \"showClear\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [CHIPS_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"inputViewChild\", first: true, predicate: [\"inputtext\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"'p-chips p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick()\">\n            <ul [ngClass]=\"{'p-inputtext p-chips-multiple-container':true,'p-focus':focus,'p-disabled':disabled}\">\n                <li #token *ngFor=\"let item of value; let i = index;\" class=\"p-chips-token\" (click)=\"onItemClick($event, item)\">\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n                    <span *ngIf=\"!itemTemplate\" class=\"p-chips-token-label\">{{field ? resolveFieldData(item,field) : item}}</span>\n                    <span *ngIf=\"!disabled\" class=\"p-chips-token-icon pi pi-times-circle\" (click)=\"removeItem($event,i)\"></span>\n                </li>\n                <li class=\"p-chips-input-token\" [ngClass]=\"{'p-chips-clearable': showClear && !disabled}\">\n                <input #inputtext type=\"text\" [attr.id]=\"inputId\" [attr.placeholder]=\"(value && value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\"\n                (input)=\"onInput()\" (paste)=\"onPaste($event)\" [attr.aria-labelledby]=\"ariaLabelledBy\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\">\n                </li>\n                <li>\n                    <i *ngIf=\"value != null && filled && !disabled && showClear\" class=\"p-chips-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n                </li>\n            </ul>\n        </div>\n    `, isInline: true, styles: [\".p-chips{display:inline-flex}.p-chips-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-chips-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-chips-input-token{flex:1 1 auto;display:inline-flex}.p-chips-token-icon{cursor:pointer}.p-chips-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-chips{display:flex}.p-chips-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-chips-clearable .p-inputtext{position:relative}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Chips, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-chips', template: `\n        <div [ngClass]=\"'p-chips p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick()\">\n            <ul [ngClass]=\"{'p-inputtext p-chips-multiple-container':true,'p-focus':focus,'p-disabled':disabled}\">\n                <li #token *ngFor=\"let item of value; let i = index;\" class=\"p-chips-token\" (click)=\"onItemClick($event, item)\">\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n                    <span *ngIf=\"!itemTemplate\" class=\"p-chips-token-label\">{{field ? resolveFieldData(item,field) : item}}</span>\n                    <span *ngIf=\"!disabled\" class=\"p-chips-token-icon pi pi-times-circle\" (click)=\"removeItem($event,i)\"></span>\n                </li>\n                <li class=\"p-chips-input-token\" [ngClass]=\"{'p-chips-clearable': showClear && !disabled}\">\n                <input #inputtext type=\"text\" [attr.id]=\"inputId\" [attr.placeholder]=\"(value && value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\"\n                (input)=\"onInput()\" (paste)=\"onPaste($event)\" [attr.aria-labelledby]=\"ariaLabelledBy\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\">\n                </li>\n                <li>\n                    <i *ngIf=\"value != null && filled && !disabled && showClear\" class=\"p-chips-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n                </li>\n            </ul>\n        </div>\n    `, host: {\n                        'class': 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focus',\n                        '[class.p-chips-clearable]': 'showClear',\n                    }, providers: [CHIPS_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".p-chips{display:inline-flex}.p-chips-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-chips-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-chips-input-token{flex:1 1 auto;display:inline-flex}.p-chips-token-icon{cursor:pointer}.p-chips-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-chips{display:flex}.p-chips-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-chips-clearable .p-inputtext{position:relative}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], field: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], allowDuplicate: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], addOnTab: [{\n                type: Input\n            }], addOnBlur: [{\n                type: Input\n            }], separator: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], onAdd: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onChipClick: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], inputViewChild: [{\n                type: ViewChild,\n                args: ['inputtext']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ChipsModule {\n}\nChipsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChipsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ChipsModule, declarations: [Chips], imports: [CommonModule, InputTextModule, SharedModule], exports: [Chips, InputTextModule, SharedModule] });\nChipsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ChipsModule, imports: [[CommonModule, InputTextModule, SharedModule], InputTextModule, SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, SharedModule],\n                    exports: [Chips, InputTextModule, SharedModule],\n                    declarations: [Chips]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHIPS_VALUE_ACCESSOR, Chips, ChipsModule };\n"]},"metadata":{},"sourceType":"module"}